
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE4_FirstProject(

	//////////// CLOCK //////////
	GCLKIN,
	GCLKOUT_FPGA,
	OSC_50_BANK2,
	OSC_50_BANK3,
	OSC_50_BANK4,
	OSC_50_BANK5,
	OSC_50_BANK6,
	OSC_50_BANK7,
	PLL_CLKIN_p,

	//////////// External PLL //////////
	MAX_I2C_SCLK,
	MAX_I2C_SDAT,

	//////////// LED x 8 //////////
	LED,

	//////////// BUTTON x 4, EXT_IO and CPU_RESET_n //////////
	BUTTON,
	CPU_RESET_n,
	EXT_IO,

	//////////// DIP SWITCH x 8 //////////
	SW,

	//////////// SLIDE SWITCH x 4 //////////
	SLIDE_SW,

	//////////// SEG7 //////////
	SEG0_D,
	SEG0_DP,
	SEG1_D,
	SEG1_DP,

	//////////// Temperature //////////
	TEMP_INT_n,
	TEMP_SMCLK,
	TEMP_SMDAT,

	//////////// Current //////////
	CSENSE_ADC_FO,
	CSENSE_CS_n,
	CSENSE_SCK,
	CSENSE_SDI,
	CSENSE_SDO,

	//////////// Fan //////////
	FAN_CTRL,

	//////////// EEPROM //////////
	EEP_SCL,
	EEP_SDA,

	//////////// SDCARD //////////
	SD_CLK,
	SD_CMD,
	SD_DAT,
	SD_WP_n,

	//////////// RS232 //////////
	UART_CTS,
	UART_RTS,
	UART_RXD,
	UART_TXD,

	//////////// Ethernet x 4 //////////
	ETH_INT_n,
	ETH_MDC,
	ETH_MDIO,
	ETH_RST_n,
	ETH_RX_p,
	ETH_TX_p,

	//////////// Flash and SRAM Address/Data Share Bus //////////
	FSM_A,
	FSM_D,

	//////////// Flash Control //////////
	FLASH_ADV_n,
	FLASH_CE_n,
	FLASH_CLK,
	FLASH_OE_n,
	FLASH_RESET_n,
	FLASH_RYBY_n,
	FLASH_WE_n,

	//////////// SSRAM Control //////////
	SSRAM_ADV,
	SSRAM_BWA_n,
	SSRAM_BWB_n,
	SSRAM_CE_n,
	SSRAM_CKE_n,
	SSRAM_CLK,
	SSRAM_OE_n,
	SSRAM_WE_n,

	//////////// 3-Ports High-Speed USB OTG //////////
	OTG_A,
	OTG_CS_n,
	OTG_D,
	OTG_DC_DACK,
	OTG_DC_DREQ,
	OTG_DC_IRQ,
	OTG_HC_DACK,
	OTG_HC_DREQ,
	OTG_HC_IRQ,
	OTG_OE_n,
	OTG_RESET_n,
	OTG_WE_n,

	//////////// HSMC-A, HSMC-A connect to HDMI RX //////////
	EDID_WP_N,
	RX_BD,
	RX_DE,
	RX_DSD,
	RX_EVENODD,
	RX_GD,
	RX_HS,
	RX_I2S,
	RX_INT_N,
	RX_MCLK,
	RX_MUTE,
	RX_PCLK,
	RX_PCSCL,
	RX_PCSDA,
	RX_RD,
	RX_RST_N,
	RX_SCDT,
	RX_SCK,
	RX_SPDIF,
	RX_VS,
	RX_WS,
	RX0_CEC,
	RX0_DDC_SCL,
	RX0_DDC_SDA,
	RX0_HPD_N,
	RX1_CEC,
	RX1_DDC_SCL,
	RX1_DDC_SDA,
	RX1_HPD_N,

	//////////// HSMC-B, HSMC-B connect to HDMI TX //////////
	TX_BD,
	TX_CEC,
	TX_DCLK,
	TX_DE,
	TX_DSR0L,
	TX_DSR0R,
	TX_DSR1L,
	TX_DSR1R,
	TX_DSR2L,
	TX_DSR2R,
	TX_DSR3L,
	TX_DSR3R,
	TX_GD,
	TX_HS,
	TX_I2S,
	TX_INT_N,
	TX_MCLK,
	TX_PCLK,
	TX_PCSCL,
	TX_PCSDA,
	TX_RD,
	TX_RST_N,
	TX_SCK,
	TX_SPDIF,
	TX_VS,
	TX_WS,

	//////////// HSMC I2C //////////
	HSMC_SCL,
	HSMC_SDA 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		GCLKIN;
output		          		GCLKOUT_FPGA;
input 		          		OSC_50_BANK2;
input 		          		OSC_50_BANK3;
input 		          		OSC_50_BANK4;
input 		          		OSC_50_BANK5;
input 		          		OSC_50_BANK6;
input 		          		OSC_50_BANK7;
input 		          		PLL_CLKIN_p;

//////////// External PLL //////////
output		          		MAX_I2C_SCLK;
inout 		          		MAX_I2C_SDAT;

//////////// LED x 8 //////////
output		     [7:0]		LED;

//////////// BUTTON x 4, EXT_IO and CPU_RESET_n //////////
input 		     [3:0]		BUTTON;
input 		          		CPU_RESET_n;
inout 		          		EXT_IO;

//////////// DIP SWITCH x 8 //////////
input 		     [7:0]		SW;

//////////// SLIDE SWITCH x 4 //////////
input 		     [3:0]		SLIDE_SW;

//////////// SEG7 //////////
output		     [6:0]		SEG0_D;
output		          		SEG0_DP;
output		     [6:0]		SEG1_D;
output		          		SEG1_DP;

//////////// Temperature //////////
input 		          		TEMP_INT_n;
output		          		TEMP_SMCLK;
inout 		          		TEMP_SMDAT;

//////////// Current //////////
output		          		CSENSE_ADC_FO;
output		     [1:0]		CSENSE_CS_n;
output		          		CSENSE_SCK;
output		          		CSENSE_SDI;
input 		          		CSENSE_SDO;

//////////// Fan //////////
output		          		FAN_CTRL;

//////////// EEPROM //////////
output		          		EEP_SCL;
inout 		          		EEP_SDA;

//////////// SDCARD //////////
output		          		SD_CLK;
inout 		          		SD_CMD;
inout 		     [3:0]		SD_DAT;
input 		          		SD_WP_n;

//////////// RS232 //////////
output		          		UART_CTS;
input 		          		UART_RTS;
input 		          		UART_RXD;
output		          		UART_TXD;

//////////// Ethernet x 4 //////////
input 		     [3:0]		ETH_INT_n;
output		     [3:0]		ETH_MDC;
inout 		     [3:0]		ETH_MDIO;
output		          		ETH_RST_n;
input 		     [3:0]		ETH_RX_p;
output		     [3:0]		ETH_TX_p;

//////////// Flash and SRAM Address/Data Share Bus //////////
output		    [25:1]		FSM_A;
inout 		    [15:0]		FSM_D;

//////////// Flash Control //////////
output		          		FLASH_ADV_n;
output		          		FLASH_CE_n;
output		          		FLASH_CLK;
output		          		FLASH_OE_n;
output		          		FLASH_RESET_n;
input 		          		FLASH_RYBY_n;
output		          		FLASH_WE_n;

//////////// SSRAM Control //////////
output		          		SSRAM_ADV;
output		          		SSRAM_BWA_n;
output		          		SSRAM_BWB_n;
output		          		SSRAM_CE_n;
output		          		SSRAM_CKE_n;
output		          		SSRAM_CLK;
output		          		SSRAM_OE_n;
output		          		SSRAM_WE_n;

//////////// 3-Ports High-Speed USB OTG //////////
output		    [17:1]		OTG_A;
output		          		OTG_CS_n;
inout 		    [31:0]		OTG_D;
output		          		OTG_DC_DACK;
input 		          		OTG_DC_DREQ;
input 		          		OTG_DC_IRQ;
output		          		OTG_HC_DACK;
input 		          		OTG_HC_DREQ;
input 		          		OTG_HC_IRQ;
output		          		OTG_OE_n;
output		          		OTG_RESET_n;
output		          		OTG_WE_n;

//////////// HSMC-A, HSMC-A connect to HDMI RX //////////
output		          		EDID_WP_N;
input 		    [11:0]		RX_BD;
input 		          		RX_DE;
input 		          		RX_DSD;
input 		          		RX_EVENODD;
input 		    [11:0]		RX_GD;
input 		          		RX_HS;
input 		     [3:0]		RX_I2S;
input 		          		RX_INT_N;
input 		          		RX_MCLK;
input 		          		RX_MUTE;
input 		          		RX_PCLK;
output		          		RX_PCSCL;
inout 		          		RX_PCSDA;
input 		    [11:0]		RX_RD;
output		          		RX_RST_N;
input 		          		RX_SCDT;
input 		          		RX_SCK;
input 		          		RX_SPDIF;
input 		          		RX_VS;
input 		          		RX_WS;
inout 		          		RX0_CEC;
inout 		          		RX0_DDC_SCL;
inout 		          		RX0_DDC_SDA;
output		          		RX0_HPD_N;
inout 		          		RX1_CEC;
input 		          		RX1_DDC_SCL;
inout 		          		RX1_DDC_SDA;
output		          		RX1_HPD_N;

//////////// HSMC-B, HSMC-B connect to HDMI TX //////////
output		    [11:0]		TX_BD;
inout 		          		TX_CEC;
output		          		TX_DCLK;
output		          		TX_DE;
output		          		TX_DSR0L;
output		          		TX_DSR0R;
output		          		TX_DSR1L;
output		          		TX_DSR1R;
output		          		TX_DSR2L;
output		          		TX_DSR2R;
output		          		TX_DSR3L;
output		          		TX_DSR3R;
output		    [11:0]		TX_GD;
output		          		TX_HS;
output		     [3:0]		TX_I2S;
input 		          		TX_INT_N;
output		          		TX_MCLK;
output		          		TX_PCLK;
output		          		TX_PCSCL;
inout 		          		TX_PCSDA;
output		    [11:0]		TX_RD;
output		          		TX_RST_N;
output		          		TX_SCK;
output		          		TX_SPDIF;
output		          		TX_VS;
output		          		TX_WS;

//////////// HSMC I2C //////////
output		          		HSMC_SCL;
inout 		          		HSMC_SDA;


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  External PLL Configuration ==========================
//=======================================================

//  Signal declarations
wire [ 3: 0] clk1_set_wr, clk2_set_wr, clk3_set_wr;
wire         rstn;
wire         conf_ready;
wire         counter_max;
wire  [7:0]  counter_inc;
reg   [7:0]  auto_set_counter;
reg          conf_wr;

//  Structural coding
assign clk1_set_wr = 4'd4; //100 MHZ
assign clk2_set_wr = 4'd4; //100 MHZ
assign clk3_set_wr = 4'd4; //100 MHZ

assign rstn = CPU_RESET_n;
assign counter_max = &auto_set_counter;
assign counter_inc = auto_set_counter + 1'b1;

always @(posedge OSC_50_BANK2 or negedge rstn)
	if(!rstn)
	begin
		auto_set_counter <= 0;
		conf_wr <= 0;
	end 
	else if (counter_max)
		conf_wr <= 1;
	else
		auto_set_counter <= counter_inc;


ext_pll_ctrl ext_pll_ctrl_Inst(
	.osc_50(OSC_50_BANK2), //50MHZ
	.rstn(rstn),

	// device 1 (HSMA_REFCLK)
	.clk1_set_wr(clk1_set_wr),
	.clk1_set_rd(),

	// device 2 (HSMB_REFCLK)
	.clk2_set_wr(clk2_set_wr),
	.clk2_set_rd(),

	// device 3 (PLL_CLKIN/SATA_REFCLK)
	.clk3_set_wr(clk3_set_wr),
	.clk3_set_rd(),

	// setting trigger
	.conf_wr(conf_wr), // 1T 50MHz 
	.conf_rd(), // 1T 50MHz

	// status 
	.conf_ready(conf_ready),

	// 2-wire interface 
	.max_sclk(MAX_I2C_SCLK),
	.max_sdat(MAX_I2C_SDAT)

);


//=======================================================
//  Structural coding
//=======================================================



endmodule
